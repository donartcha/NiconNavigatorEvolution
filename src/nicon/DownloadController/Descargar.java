/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nicon.DownloadController;


import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import nicon.Recursos.Archivo;
import nicon.Recursos.DieTime;



/**
 *
 * @author Dony
 */
public class Descargar extends javax.swing.JFrame implements Runnable {
private  DefaultListModel model = new DefaultListModel();
private List<Archivo> lista = new ArrayList<>();
private Archivo archivo = new Archivo("",null,0.0,"");
private File Carpeta;
private DieTime pausa = new DieTime();
    /**
     * Creates new form Descargar
     */
    public Descargar() {
        initComponents();
        this.setTitle("NiconNavigator-Descargas"); 
        addListListener();
        Descargar.setVisible(false);
        Estado.setVisible(false);
        
       
    }
@Override
    public void run(){
    
    }
    public void setCarpeta(File a){
    Carpeta = a;
    }

    public final void addListListener(){
    jList1.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
     @Override
        public void valueChanged(ListSelectionEvent e) {
    int selectedItem = jList1.getSelectedIndex();
    System.out.println(selectedItem);
    Descargar.setVisible(true);
    Estado.setVisible(true);
    archivo = lista.get(selectedItem);
    Estado.setString(null);
    Estado.setValue(0);
    
     }
    });
    }
    
    public void addDescarga(Archivo a){
    lista.add(a);
    model.addElement(a.Name+"          "+a.Tam+" "+a.Unidad);
    jList1.setModel(model);
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        Descargar = new javax.swing.JButton();
        Estado = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        Descargar.setText("Descargar");
        Descargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescargarActionPerformed(evt);
            }
        });

        Estado.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Estado.setDoubleBuffered(true);
        Estado.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Descargar, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(Estado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Descargar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public Image getIconImage() {
      
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("nicon/Imagenes/ProsJava.png"));
       

        return retValue;
    }
    
    
    
    private void DescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescargarActionPerformed
 
try{
URL url = archivo.Link;
URLConnection urlCon = url.openConnection();
File Ruta = new File(Carpeta.getPath()+"\\"+archivo.Name);
if (Ruta.exists()){
String name = archivo.Name;

int i1 = name.lastIndexOf(".");
        
String Name = name.substring(0, i1-1);
String Extencion = name.substring(i1,name.length());

int c = 1;
String Newname = Name+"("+c+")"+Extencion;
Ruta = new File(Carpeta.getPath()+"\\"+Newname);
while(Ruta.exists()==true){
Newname = Name+"("+c+")"+Extencion;
Ruta = new File(Carpeta.getPath()+"\\"+Newname); c++;
}

}
System.out.println("Descargando: "+Ruta);
System.out.println(urlCon.getContentType());
System.out.println("TamaÃ±o del archivo= "+archivo.Tam+" "+archivo.Unidad);


                       int tmax1 = urlCon.getContentLength();
                        System.out.println("Tmax1= " + tmax1);
                       float tmax = (float) tmax1/1000000;
                       int tdes = 0;
                       float t = tmax1/100;
                       Estado.setMaximum(tmax1);
                       Estado.setMinimum(0);
                       
                       int cero = 0;
            FileOutputStream fos;
            try (InputStream is = urlCon.getInputStream()) {
                fos = new FileOutputStream(Ruta);
                byte[] array = new byte[1000];
                int leido = is.read(array);
                while (leido > 0) {
                        fos.write(array, 0, leido);
                        leido = is.read(array);
                        tdes = tdes + leido;
                        
                        Estado.setValue(tdes);
                        
                        java.awt.Rectangle recProgreso = Estado.getBounds();
                        recProgreso.x = 0;
                        recProgreso.y = 0;
                        Estado.paintImmediately(recProgreso);
                       
                        cero++;
                        
                }
                Estado.setString("Descarga Completada");
                fos.close();
                is.close();
             //   Estado.setVisible(false);
		
            }
			

}catch(Exception e){}
        
        
    }//GEN-LAST:event_DescargarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Descargar;
    private javax.swing.JProgressBar Estado;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
